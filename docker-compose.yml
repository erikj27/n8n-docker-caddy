services:
    caddy:
        image: caddy:latest
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - caddy_data:/data
            - ${DATA_FOLDER}/caddy_config:/config
            - ${DATA_FOLDER}/caddy_config/Caddyfile:/etc/caddy/Caddyfile

    frontend:
        image: ${DOCKER_USERNAME}/${FRONTEND_IMAGE_NAME}:${FRONTEND_IMAGE_TAG}
        restart: always
        environment:
            - NODE_ENV=production
        depends_on:
            - n8n

    postgres:
        image: postgres:14
        restart: always
        environment:
            POSTGRES_USER: ${DB_POSTGRESDB_USER}
            POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
            POSTGRES_DB: ${DB_POSTGRESDB_DATABASE}
        volumes:
            - postgres_data:/var/lib/postgresql/data

    n8n:
        image: docker.n8n.io/n8nio/n8n:latest
        pull_policy: always
        restart: always
        depends_on:
            - browserless
        ports:
            - 5678:5678
        environment:
            - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
            - N8N_PORT=5678
            - N8N_PROTOCOL=https
            - NODE_ENV=production
            - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
            - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
            - DB_TYPE=${DB_TYPE}
            - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
            - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
            - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
            - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
            - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
            - NODE_FUNCTION_ALLOW_BUILTIN=${NODE_FUNCTION_ALLOW_BUILTIN}
            - NODE_FUNCTION_ALLOW_EXTERNAL=${NODE_FUNCTION_ALLOW_EXTERNAL}
            - PUPPETEER_WS_ENDPOINT=ws://browserless:3000?token=${BROWSERLESS_TOKEN}
        volumes:
            - n8n_data:/home/node/.n8n
            - ${DATA_FOLDER}/local_files:/files

    browserless:
        image: ghcr.io/browserless/chromium
        restart: always
        ports:
            - 3000:3000
        environment:
            - MAX_CONCURRENT_SESSIONS=10
            - CONNECTION_TIMEOUT=300000
            - PREBOOT_CHROME=true
            - TOKEN=${BROWSERLESS_TOKEN}

volumes:
    caddy_data:
        external: true
    n8n_data:
        external: true
    postgres_data:
